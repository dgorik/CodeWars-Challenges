/**
 * @param {number[]} flowerbed
 * @param {number} n
 * @return {boolean}
 */

 //We are given an array and an integer as parameters
 //We need to return a boolean value (whihc is either true or false)
 //Will empty pots always be zero and non-empty will be 1?
 //In this case, adjacent means plants cannot be planted side by side
 //If flowerbed has a length of 1 and flowerbed[0] = 0, return true
 //If flowerbed doesn't have any zeros in it, return false
 //If we find n empty pots in the array from index i to i + n, we need to make sure the pot in i -1 position is 0 and a pot in i + n + is also 0 
 //
var canPlaceFlowers = function(flowerbed, n) {

    if(n == 0) return true 

    if(!flowerbed.includes(0)) return false

    let count = n

    for (let i = 0; i < flowerbed.length; i++) {
        if (flowerbed[i] === 0 &&
            (i == 0 || flowerbed[i - 1] == 0) &&  
            (i == flowerbed.length - 1 || flowerbed[i + 1] == 0)) { 
            flowerbed[i] = 1; 
            count--;
            i++;  
        }
    }
    return count <= 0 

};
