/**
 * @param {string} s
 * @param {number} k
 * @return {number}
 */
var longestSubstring = function(s, k) {
    const n = s.length;
    if (n === 0 || n < k) return 0;
    if (k <= 1) return n;

    let character_map = {}
    
    for(let element of s){
        character_map[element] = (character_map[element] || 0) + 1
    }

    for (let i = 0; i < s.length; i++) {
        if (character_map[s[i]] < k) {
            // Split the string into two parts: before and after the invalid character
            const left = longestSubstring(s.substring(0, i), k);
            const right = longestSubstring(s.substring(i + 1), k);
            return Math.max(left, right);
        }
    }
    return n
};
