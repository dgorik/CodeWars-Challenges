/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */

/**
 * @param {ListNode} headA
 * @param {ListNode} headB
 * @return {ListNode}
 */
var getIntersectionNode = function(headA, headB) {
    let map = new Map()

    let cur1 = headA

    while(cur1){
        map.set(cur1, true)
        cur1 = cur1.next
    }

    cur2 = headB

    while(cur2){
        if (map.has(cur2)){
            return cur2
        }
        cur2 = cur2.next
    }


};

//The idea here to loop through one of the linked lists and store all its nodes in a map. 
//We can then loop through the second linked list and check if any node from the second linked list is present in a map. 
//If yes, we can return that node.
