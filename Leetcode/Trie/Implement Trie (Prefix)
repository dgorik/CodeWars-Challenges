var TrieNode = function() {
    this.children = new Array(26).fill(null);
    this.endOfWord = false;
};

var Trie = function(){
    this.root = new TrieNode()
}
/** 
 * @param {string} word
 * @return {void}
 */
Trie.prototype.insert = function(word) {
    let cur = this.root
    for(let char of word){
        let idx = char.charCodeAt(0) - 'a'.charCodeAt(0)
        if(cur.children[idx] === null){
            cur.children[idx] = new TrieNode()
        }
        cur = cur.children[idx]
    }
    cur.endOfWord = true
};

/** 
 * @param {string} word
 * @return {boolean}
 */
Trie.prototype.search = function(word) {
    let cur = this.root
    for(let char of word){
        let idx = char.charCodeAt(0) - 'a'.charCodeAt(0)
        if(!cur.children[idx]){
            return false
        }
        cur = cur.children[idx]
    }
    return cur.endOfWord
};

/** 
 * @param {string} prefix
 * @return {boolean}
 */
Trie.prototype.startsWith = function(prefix) {
    let cur = this.root
    for(let char of prefix){
        let idx = char.charCodeAt(0) - 'a'.charCodeAt(0)
        if(!cur.children[idx]){
            return false
        }
        cur = cur.children[idx]
    }
    return true
};

/** 
 * Your Trie object will be instantiated and called as such:
 * var obj = new Trie()
 * obj.insert(word)
 * var param_2 = obj.search(word)
 * var param_3 = obj.startsWith(prefix)
 */
