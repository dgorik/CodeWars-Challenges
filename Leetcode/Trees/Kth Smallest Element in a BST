**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} k
 * @return {number}
 */
var kthSmallest = function(root, k) {
    let nodes = []
    function inOrder(node){
        if(!node) return
        inOrder(node.left)
        nodes.push(node.val)
        inOrder(node.right)
    }
    inOrder(root)
    return nodes[k - 1]
};

//The general idea here is to use an InOrder traversal to get a list of nodes in ascending order.
//InOrder traversal always returns a list of nodes in ascending order for a binary search tree
//You then simply access the k-1 element of the resulted array
