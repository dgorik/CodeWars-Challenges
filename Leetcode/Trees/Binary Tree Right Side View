var rightSideView = function(root) {
    if(!root) return []
    let res = []
    let q = []
    q.push(root)

    while(q.length >= 1){
        res.push(q[q.length - 1].val)
        let length = q.length

        for(let i = 0; i < length; i++){
            let node = q.shift()
           
            if(node.left){
                q.push(node.left)
            }
            if(node.right){
                q.push(node.right)
            }
            
        } 
    }

    return res
};

// The general idea here is to do BFS
// We traverse a tree level by level and at each level we pop the most right node in a queue.
// That most right node is a node that we see at each level from a right side perspective
